{"version":3,"file":"js/933.3cd68484.js","mappings":"gXACcA,EAAAC,UAAO,WAAnBC,EAAAA,EAAAA,IA2CO,OAAAC,EAAA,EA1CLC,EAAAA,EAAAA,GAEU,iBADRC,EAAAA,EAAAA,IAAiEC,EAAA,CAArDC,OAAQP,EAAAQ,eAAgBC,MAAM,WAAYC,KAAM,G,sBAG9DN,EAAAA,EAAAA,GAOU,iBANRC,EAAAA,EAAAA,IAKEM,EAAA,CAJAF,MAAM,WACLG,SAAUZ,EAAAa,aACXC,KAAA,GACCJ,KAAM,G,wBAGXN,EAAAA,EAAAA,GAMU,iBALRC,EAAAA,EAAAA,IAIEU,EAAA,CAHAN,MAAM,eACLG,SAAUZ,EAAAgB,aACVN,KAAM,G,wBAGXN,EAAAA,EAAAA,GAOU,iBANRC,EAAAA,EAAAA,IAKEM,EAAA,CAJAF,MAAM,cACLG,SAAUZ,EAAAiB,WACVP,KAAM,EACPI,KAAA,I,wBAGJV,EAAAA,EAAAA,GAMU,iBALRC,EAAAA,EAAAA,IAIEM,EAAA,CAHAF,MAAM,eACLG,SAAUZ,EAAAkB,aACVR,KAAM,G,wBAGXN,EAAAA,EAAAA,GAOU,iBANRC,EAAAA,EAAAA,IAKEM,EAAA,CAJAF,MAAM,gBACLG,SAAUZ,EAAAmB,UACVT,KAAM,EACPI,KAAA,I,0CAImBd,EAAAC,SAAW,iBAAJ,WAAhCmB,EAAAA,EAAAA,IAAoCC,EAAA,CAAAC,IAAA,S,6CAQtC,GACEC,KAAM,SACNC,UACEC,KAAKC,SACP,EACAC,OACE,MAAO,CACLnB,eAAgB,GAChBK,aAAc,GACdG,aAAc,GACdC,WAAY,GACZC,aAAc,GACdC,UAAW,GACXlB,SAAS,EAEb,EACA2B,QAAS,CACPC,gBACE,IACE,MAAMC,EAAU,CACdC,oBAAqB,MAEjBC,EAAU,CACdC,qBAAsB,KAElBC,EAAU,CACdD,qBAAsB,GAElBE,EAAU,CACdF,qBAAsB,KAElBG,EAAU,CACdH,qBAAsB,KAElBI,EAAO,sCAEPC,EAAW,CACfb,KAAKc,OAAOC,IAAIH,GAChBZ,KAAKc,OAAOC,IAAIH,EAAK,CACnBI,OAAQX,IAEVL,KAAKc,OAAOC,IAAIH,EAAK,CACnBI,OAAQT,IAEVP,KAAKc,OAAOC,IAAIH,EAAK,CACnBI,OAAQP,IAEVT,KAAKc,OAAOC,IAAIH,EAAK,CACnBI,OAAQN,IAEVV,KAAKc,OAAOC,IAAIH,EAAK,CACnBI,OAAQL,MAILM,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,SAAcC,QAAQC,IACzDX,GAGFb,KAAKjB,eAAiB,IAAIkC,EAAKf,KAAKuB,KAAKC,SACzC1B,KAAKZ,aAAe,IAAI8B,EAAKhB,KAAKuB,KAAKC,SACvC1B,KAAKT,aAAe,IAAI4B,EAAKjB,KAAKuB,KAAKC,SACvC1B,KAAKR,WAAa,IAAI4B,EAAKlB,KAAKuB,KAAKC,SACrC1B,KAAKP,aAAe,IAAI4B,EAAKnB,KAAKuB,KAAKC,SACvC1B,KAAKN,UAAY,IAAI4B,EAAKpB,KAAKuB,KAAKC,SAEpC1B,KAAKxB,SAAU,CACjB,CAAE,MAAOmD,GACPC,QAAQD,MAAMA,EAChB,CACF,GAEFE,WAAY,CACVC,UAAS,IACTC,cAAa,IACbC,gBAAe,IACfC,iBAAgBA,EAAAA,I,QC1HpB,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://movie-web/./src/pages/TvMain.vue","webpack://movie-web/./src/pages/TvMain.vue?a2e0"],"sourcesContent":["<template>\n  <main v-if=\"loading\">\n    <section>\n      <CoverFlow :movies=\"popularContent\" title=\"인기 TV시리즈\" :type=\"1\" />\n    </section>\n\n    <section>\n      <ListComponent\n        title=\"한국 TV시리즈\"\n        :listData=\"koreaContent\"\n        desc\n        :type=\"1\"\n      />\n    </section>\n    <section>\n      <VisualComponent\n        title=\"Wavve 인기 컨텐츠\"\n        :listData=\"wavvePopular\"\n        :type=\"1\"\n      />\n    </section>\n    <section>\n      <ListComponent\n        title=\"넷플릭스 인기 컨텐츠\"\n        :listData=\"netflixNew\"\n        :type=\"1\"\n        desc\n      />\n    </section>\n    <section>\n      <ListComponent\n        title=\"애플티비+ 인기 컨텐츠\"\n        :listData=\"applePopular\"\n        :type=\"1\"\n      />\n    </section>\n    <section>\n      <ListComponent\n        title=\"디즈니플러스 인기 컨텐츠\"\n        :listData=\"disneyNew\"\n        :type=\"1\"\n        desc\n      />\n    </section>\n  </main>\n  <LoadingComponent v-if=\"!loading\" />\n</template>\n\n<script>\nimport LoadingComponent from \"@/components/LoadingComponent.vue\";\nimport ListComponent from \"@/components/ListComponent.vue\";\nimport VisualComponent from \"@/components/VisualComponent.vue\";\nimport CoverFlow from \"@/components/CoverFlow.vue\";\nexport default {\n  name: \"TvMain\",\n  mounted() {\n    this.getList();\n  },\n  data() {\n    return {\n      popularContent: [],\n      koreaContent: [],\n      wavvePopular: [],\n      netflixNew: [],\n      applePopular: [],\n      disneyNew: [],\n      loading: false,\n    };\n  },\n  methods: {\n    async getList() {\n      try {\n        const option1 = {\n          with_origin_country: \"KR\",\n        };\n        const option2 = {\n          with_watch_providers: 356,\n        };\n        const option4 = {\n          with_watch_providers: 8,\n        };\n        const option5 = {\n          with_watch_providers: 350,\n        };\n        const option6 = {\n          with_watch_providers: 337,\n        };\n        const url = `${process.env.VUE_APP_URL}/api/discover/tv`;\n\n        const promises = [\n          this.$axios.get(url),\n          this.$axios.get(url, {\n            params: option1,\n          }),\n          this.$axios.get(url, {\n            params: option2,\n          }),\n          this.$axios.get(url, {\n            params: option4,\n          }),\n          this.$axios.get(url, {\n            params: option5,\n          }),\n          this.$axios.get(url, {\n            params: option6,\n          }),\n        ];\n\n        const [res1, res2, res3, res4, res5, res6] = await Promise.all(\n          promises\n        );\n\n        this.popularContent = [...res1.data.list.results];\n        this.koreaContent = [...res2.data.list.results];\n        this.wavvePopular = [...res3.data.list.results];\n        this.netflixNew = [...res4.data.list.results];\n        this.applePopular = [...res5.data.list.results];\n        this.disneyNew = [...res6.data.list.results];\n\n        this.loading = true;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  components: {\n    CoverFlow,\n    ListComponent,\n    VisualComponent,\n    LoadingComponent,\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\nsection {\n  margin-bottom: 40px;\n}\n</style>\n","import { render } from \"./TvMain.vue?vue&type=template&id=fd60b73e&scoped=true\"\nimport script from \"./TvMain.vue?vue&type=script&lang=js\"\nexport * from \"./TvMain.vue?vue&type=script&lang=js\"\n\nimport \"./TvMain.vue?vue&type=style&index=0&id=fd60b73e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fd60b73e\"]])\n\nexport default __exports__"],"names":["$data","loading","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_CoverFlow","movies","popularContent","title","type","_component_ListComponent","listData","koreaContent","desc","_component_VisualComponent","wavvePopular","netflixNew","applePopular","disneyNew","_createBlock","_component_LoadingComponent","key","name","mounted","this","getList","data","methods","async","option1","with_origin_country","option2","with_watch_providers","option4","option5","option6","url","promises","$axios","get","params","res1","res2","res3","res4","res5","res6","Promise","all","list","results","error","console","components","CoverFlow","ListComponent","VisualComponent","LoadingComponent","__exports__","render"],"sourceRoot":""}